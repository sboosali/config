{-# START_FILE {{name}}.cabal #-}
name:                {{name}}
version:             0.0.0
synopsis:            TODO 
description:         TODO 
homepage:            http://github.com/{{github-username}}/{{name}}#readme
license:             BSD3
license-file:        LICENSE
author:              {{author-name}}
maintainer:          {{author-email}}
copyright:           {{copyright}}
category:            {{category}}
build-type:          Simple
-- extra-source-files:
cabal-version:       >=1.10

source-repository head
  type:     git
  location: https://github.com/{{github-username}}/{{name}}


library
 hs-source-dirs:      library
 default-language:    Haskell2010
 ghc-options:         -Wall

 exposed-modules:   
  {{module-name}} 
  {{module-name}}.Main  

 build-depends:    
    base >=4.7 && <5 
  -- , lens 


-- $ stack exec {{name}}
executable {{name}}
 hs-source-dirs:      executables 
 main-is:             Main.hs
 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:     
    base
  , {{name}}


-- $ stack test {{name}} 
test-suite doctest
 hs-source-dirs:      tests
 main-is:             DocTest.hs
 type:                exitcode-stdio-1.0
 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 build-depends:     
  base
  , {{name}}
  , doctest ==0.10.*

-- $ stack test {{name}} 
test-suite unittest
 hs-source-dirs:      tests
 main-is:             UnitTest.hs
 type:                exitcode-stdio-1.0
 default-language:    Haskell2010
 ghc-options:         -Wall -threaded -rtsopts -with-rtsopts=-N

 other-modules: 
  {{module-name}}.Test

 build-depends:     
  base
  , {{name}}
  , hspec ==2.2.*
  , QuickCheck ==2.8.*


{-# START_FILE cabal.config #-}
executable-profiling: True
library-profiling: True


{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain


{-# START_FILE stack.yaml #-}
resolver: lts-5.5

packages:
- .

extra-deps: []


{-# START_FILE library/{{module-name}}.hs #-}
module {{module-name}} where


{-# START_FILE library/{{module-name}}/Main.hs #-}
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
module {{module-name}}.Main where
import {{module-name}}

main = do
 print "{{module-name}}"


{-# START_FILE tests/{{module-name}}/Test.hs #-}
module {{module-name}}.Test where
import {{module-name}}

main = do
 print "{{module-name}}"


{-# START_FILE tests/DocTest.hs #-}
{-# OPTIONS_GHC -fno-warn-missing-signatures #-}
import Test.DocTest
main = do
 doctest ["{{module-name}}"]


{-# START_FILE tests/UnitTest.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover #-}


{-# START_FILE executables/Main.hs #-}
import {{module-name}}.Main


{-# START_FILE LICENSE #-}
Copyright {{author-name}} (c) 2015

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


{-# START_FILE README.md #-}
# {{name}}

TODO


{-# START_FILE Makefile #-}
PACKAGE = {{name}}

HC = cabal exec -- ghc

CODE = sources # tests

default: check

all: build test run document style

configure:
	cabal configure --enable-tests

build: configure
	cabal build

run:
	cabal run

test:
	cabal configure --enable-tests
	cabal test && echo && cat dist/test/*-tests.log

bench:
	cabal configure --enable-benchmarks && cabal bench

document:
	cabal haddock
	open dist/doc/html/$(PACKAGE)/index.html

hyperlink: 
	cabal haddock --with-haddock="$(HOME)/haddock/.cabal-sandbox/bin/haddock" --haddock-options="--hyperlinked-source"
	open dist/doc/html/$(PACKAGE)/index.html

style:
	hlint --hint=HLint.hs  *.hs $(CODE)

fix:
	git vogue fix --all

check:
#	cabal build --ghc-options="-fforce-recomp -fno-code"
	cabal build --ghc-options="-fno-code"

clean:
	cabal clean 
	rm -f Main *.{o,hi,dyn_o,dyn_hi} *.{prof,hp,aux,ps} 

fresh: clean
	rm -fr dist

.PHONY: default clean fresh all configure build test document hyperlink style check fix bench


